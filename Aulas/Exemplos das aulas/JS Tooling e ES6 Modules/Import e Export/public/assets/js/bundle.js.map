{"version":3,"file":"bundle.js","mappings":"iyBAgBC,ICVKA,EAAK,IDYgBC,GACvB,SAAAC,EAAYC,EAAMC,I,4FAAWC,CAAA,KAAAH,GACzBI,KAAKH,KAAOA,EACZG,KAAKF,UAAYA,CACrB,IChBO,CDES,QACK,WCFzBG,QAAQC,IAAIR,E","sources":["webpack://webpack/./src/modulo1.js","webpack://webpack/./src/index.js"],"sourcesContent":["// documentação - https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Statements/export\r\n\r\n// documentação - https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Statements/import\r\n\r\n// Para que algo seja exportado, precisa estar com a palavra export antes de declarar a variavel/função, caso contrario, não sera possivel utilizar em outro arquivo.\r\n\r\n// A expressão \"default\" so pode ter 1 por arquivo, vai tornar uma exportação padrão, ou seja, no arquivo \"index.js\" sem as chaves {} pode dar qualquer nome para a função\r\n\r\nexport const nome = 'Jonas'\r\nexport const sobrenome = 'Miranda'\r\nexport const idade = 30\r\n\r\nconst cpf = 'cpf'\r\n\r\nexport function soma(x, y) {\r\n    return x + y\r\n}\r\n\r\nexport default class Pessoa {\r\n    constructor(nome, sobrenome) {\r\n        this.nome = nome\r\n        this.sobrenome = sobrenome\r\n    }\r\n}\r\n\r\n// export { nome as nome2, sobrenome, idade, soma }","// import { nome2, sobrenome, idade, soma, Pessoa as OutroNome } from './modulo1'\n\n// import * as MeuModulo from './modulo1'\n\nimport Pessoa, { nome, sobrenome} from './modulo1'\n\nconst p1 = new Pessoa(nome, sobrenome)\nconsole.log(p1)"],"names":["p1","_createClass","Pessoa","nome","sobrenome","_classCallCheck","this","console","log"],"sourceRoot":""}